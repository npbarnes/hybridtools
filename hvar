#!/usr/bin/env python
import numpy as np
from HybridReader2 import HybridReader2 as hr
from HybridReader2 import NoSuchVariable
from HybridHelper import parser, parse_cmd_line, init_figures, direct_plot, bs_hi_plot, traj_plot, get_pluto_coords, streams, build_pcolormesh_format_coord
import matplotlib.pyplot as plt
from matplotlib import colors, rcParams
from hvarplotter import plot_variable

parser.add_argument('--save2')
parser.add_argument('--streamlines', action='store_true')
parser.add_argument('--beta_limits', type=int, nargs=2)
parser.add_argument('--plutostyle', action='store_true')
parser.add_argument('-n', default=None, type=int)
args = parse_cmd_line()

figs, axs = init_figures(args)
plot_variable(figs, axs, args)

## Set axis limits, labels, titles
##################################
if args.ylim is not None:
    for ax in axs:
        ax.set_ylim(*args.ylim)
if args.xlim is not None:
    for ax in axs:
        ax.set_ylim(*args.ylim)

for ax in axs:
    ax.set_title(args.title,  fontsize=args.titlesize)


## Save or show
###############
if args.save:
    for fig,d in zip(figs, args.directions):
        fig.savefig(args.save+"_"+d, bbox_inches='tight')
else:
    plt.show()
